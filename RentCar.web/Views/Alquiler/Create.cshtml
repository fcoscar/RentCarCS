@model RentCar.web.Models.Request.AlquilerAddResquest

@{
    ViewData["Title"] = "Alquilar";
}
<h1>AlquilarCarro</h1>
<hr/>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="From" class="control-label">Desde</label>
                <input asp-for="From" type="date" pattern="\d{2}-\d{2}-\d{4}" id="from" class="form-control"/>
                <span asp-validation-for="From" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="To" class="control-label">Hasta</label>
                <input asp-for="To" type="date" pattern="\d{4}-\d{2}-\d{2}" id="to" class="form-control"/>
                <span asp-validation-for="To" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CarId" class="control-label">Car</label>
                @* @Html.EditorFor(a => a.CarId, new { htmlAtributtes  = new { @class = "form-control", placeholder = @Model.CarId }}) *@
                <input asp-for="CarId" class="form-control" />
                <span asp-validation-for="CarId" class="text-danger"></span> 
            </div>
            <div class="form-group">
                <label asp-for="PricePerDay" class="control-label"></label> 
                <input asp-for="PricePerDay" id="per-day" class="form-control" />
                <span asp-validation-for="PricePerDay" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ReservationTime" class="control-label"></label> 
                <input asp-for="ReservationTime" id="total-time" class="form-control" />
                <span asp-validation-for="ReservationTime" class="text-danger"></span>
            </div>
            
            <div class="form-group">
                <label asp-for="TotalPrice" class="control-label"></label> 
                <input asp-for="TotalPrice" id="total" class="form-control" />
                <span asp-validation-for="TotalPrice" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IdUsuarioCreacion" class="control-label"></label> 
                <input asp-for="IdUsuarioCreacion" class="form-control" />
                <span asp-validation-for="IdUsuarioCreacion" class="text-danger"></span>
            </div>
            
            
            @* <div class="form-group"> *@
            @*     <label asp-for="categoriaId" class="control-label">Categoria</label> *@
            @*     @Html.DropDownListFor(c => c.categoriaId, *@
            @*         new SelectList(Enum.GetValues(typeof(Categories))), "Selecciona una categoria", new {@class = "form-control"}) *@
            @* *@
            @* </div> *@
            @* <div class="form-group"> *@
            @*     <label asp-for="categoriaId" class="control-label">Categoria</label> *@
            @*     <input asp-for="categoriaId" class="form-control" /> *@
            @*     <span asp-validation-for="categoriaId " class="text-danger"></span> *@
            @* </div> *@
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary"/>
            </div>
        </form>
    </div>
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>


@section Scripts
{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>

    <script type="text/javascript">       
    let from = document.getElementById('from')
    let to = document.getElementById('to')
    let pricePerDay = document.getElementById('per-day').value

    from.addEventListener('input', onChangeDate)
    to.addEventListener('input', onChangeDate) 

    
    let today = new Date()
    from.setAttribute('min', today.toISOString().split('T')[0])    
    function onChangeDate(){
        to.setAttribute('min',new Date(from.value).toISOString().split('T')[0])
        let total = document.getElementById('total')
        let date1 = new Date(from.value)
        let date2 = new Date(to.value)
        let totalDays = (date2.getTime() - date1.getTime()) / (1000*3600*24)              
        document.getElementById('total-time').value = totalDays
        total.value = (totalDays * pricePerDay)
    }
    </script>
}
